@startuml
title Activity Diagram: Manual Enrollment of an Individual Student

header
<font size=14><b>Process Boundary Conditions</b></font>
--
<font color=blue><b>Pre-condition:</b></font>
- The student's profile exists in the system.
- The course catalog and master timetable are available.
end header

footer
<font color=green><b>Post-condition:</b></font>
- The student is successfully enrolled in the selected courses.
- The student's academic record and class rosters are updated.
end footer

skinparam activity {
    BackgroundColor<<System>> LightBlue
    BorderColor<<System>> #0000FF
    BackgroundColor<<Registrar>> Beige
    BorderColor<<Registrar>> #8B4513
}

|Registrar|
start
:Search for and select a student profile;
:View the student's Academic Plan to determine course needs;
note right: Implements `stu_plan_view` requirement.
:Initiate the enrollment process for the student;

|System| <<System>>
:Present the course catalog and the student's current schedule side-by-side;

|Registrar|
repeat
  :Select a course section to add;
  |System| <<System>>
  :Provide real-time validation feedback;
  note right: Implements `student_eligibilityStatus` and `notifications` requirements.
  |Registrar|
  if (Validation OK?) then (yes)
    :Add class to a "pending enrollment" list;
  else (no)
    :See error message and cannot add the class;
    note left: Can choose another section or use Forced Enrollment if available.
  endif
repeat while (More courses to add?) is (yes)
-> no;

:Review the "pending enrollment" list;
:Click "Finalize Enrollment";

|System| <<System>>
:Run a final validation on the entire proposed schedule;
:Present a summary for confirmation;

|Registrar|
:Confirm the enrollment;

|System| <<System>>
:Persist enrollment records;
:Update all relevant data;
:Display success confirmation;

stop
@enduml
