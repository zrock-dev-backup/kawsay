@startuml
!include ../style.puml
'skinparam linetype ortho

actor Teacher
actor Student
actor "Academic\nCoordinator" AS coordinator
actor "Student Information\nSystem" AS SIS
actor "Student Services" AS SS

rectangle "Enrolled" as G_Enrolled <<Goal>>
	Student --> G_Enrolled
database "Teaching staff\nto be hired" as R_RequiredTeachers <<Resource>>
	coordinator --> R_RequiredTeachers

package "Registrar" <<actorboundary>> {
	rectangle "Enroll student to course" as T_EnrollStudent <<Task>>
		G_Enrolled <|-- T_EnrollStudent: means-end

    rectangle "Verify student timeslot availability" as T_ReviewStudentAvailability <<Task>>
    rectangle "Assign a teacher (faculty practicioner or professor) to a class" as T_FindTeacher <<Task>>
    rectangle "Create class on timetable in a defined period boundary" as T_Allocate <<Task>>
		T_EnrollStudent --o T_Allocate: decomposes into
		T_Allocate --o T_FindTeacher: decomposes into
		T_Allocate --o T_ReviewStudentAvailability: decomposes into

rectangle "Plan new courses to be open next module" as T_PlanNewCourses <<Task>>
	R_RequiredTeachers --> T_PlanNewCourses
	rectangle "Collect list of passed and failed courses" as T_ListCourses <<Task>>
	T_PlanNewCourses --o T_ListCourses: decomposes into

/'
++ (MAKE)  | stronly positive
+  (HELP)  | positive
-  (HURT)  | negative
-- (BREAK) | stronly negative
'/
cloud "Minimize Administrative Overhead" as SG_Overhead <<Softgoal>>
    SG_Overhead <.. T_ReviewStudentAvailability: - (HURT)
    SG_Overhead <.. T_Allocate: - (HURT)
    T_PlanNewCourses ..> SG_Overhead: + (HELP)

cloud "Reduce student double booking" as SG_AvoidStudentDoubleBooking <<Softgoal>>
    T_ReviewStudentAvailability ..> SG_AvoidStudentDoubleBooking: + (MAKE)
}
database "Module timetable" as R_CourseTimetableInfo <<Resource>>
	R_CourseTimetableInfo --> T_Allocate
	Teacher --> R_CourseTimetableInfo
	Student --> R_CourseTimetableInfo
database "Student Data" as R_StudentData <<Resource>>
	R_StudentData <-- T_ListCourses: uses
	SIS <-- R_StudentData
database "Hired teachers data" as R_HiredTeacherData <<Resource>>
	R_HiredTeacherData <-- T_FindTeacher: uses
	coordinator <-- R_HiredTeacherData
cloud "Resolve student enrollment\n & timetable issues" as SG_ResolveIssues <<Softgoal>>
	SS --> SG_ResolveIssues
	T_ReviewStudentAvailability ..> SG_ResolveIssues: + (MAKE)
	T_EnrollStudent ..> SG_ResolveIssues: + (MAKE)
@enduml

