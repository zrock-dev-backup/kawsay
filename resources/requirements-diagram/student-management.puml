@startuml
skinparam wrapwidth 200
skinparam defaultFontName Helvetica

skinparam class {
    BackgroundColor<<Requirement>> Beige
}

package "Student" {
    stereotype "Generate new groups and section combinations" {
        {field} overview:
    }
    stereotype "Student filter" AS student_filter{
        {field} overview: I as a registrar want to filter my search of students according to: group, section, cohort, timezone and country.
    }
    stereotype "Student search" AS student_search {
        {field} overview: I as registrar want to search for an student.
    }
	student_selection +-- student_search
	student_selection +-- student_filter
}

package "Academic Registration" {
    stereotype "Section registration" AS reg_section {
        {field} overview:
    }
    stereotype "Group registration" AS reg_group {
        {field} overview:
    }
    stereotype "Cohort registration" AS reg_cohort {
        {field} overview:
    }
    stereotype "Track registration" AS reg_track {
        {field} overview: I as a registrar want to create a track, so that students will be managed under that track.
		'{field} Track creation involves selecting cohorts.
		'{field} Cohort creation involves selecting groups, groups are composed by sections.
    }
	reg_track +-- reg_group
	reg_track +-- reg_section
	reg_track +-- reg_cohort
	NOTE LEFT OF reg_track
		"A track is an association of students by language and timezone divided in cohorts, groups and sections."
	END NOTE
}

package "Student management" AS pck_student_mgmt{
    stereotype "Student profile View" {
        {field} overview: As a registrar I want to see the profile of each student.
        {field} data: {name, emailAddress, {[enrolled courses, sections and groups]}, cohort}
    }
    stereotype "Student Academic Plan View" AS stu_plan_view {
        {field} overview: As a registrar, I want to view a student's academic plan to see which courses are required, which are completed, and which are available to be taken next. This view should clearly distinguish between mandatory courses and electives.
    }
    stereotype "Grading" AS grading {
        {field} overview: SAP and GPA are grading scales to evaluate a student. System should allow registrar office to browse one or many student grading.
    }
    stereotype "Data integrity" AS sis_integrity {
        {field} overview: System should ensure coherence between internal DB and SIS' DB
    }
    stereotype "SIS integration" as sis {
        {field} overview: System should verify that registered students are available in SIS.
    }
    sis +-- sis_integrity
    stereotype "Personal registration" AS stu_c{
        {field} overview: student creation should contemplate the following fields.
        Enrollment status of a student (a.k.a. program status): enrolled, withdrawn, LOA
        email, cohort, group, section, country
    }
    stu_c <.. sis: <<drvReqt>>
    stereotype "Student management" AS stu_mgmt{
    ' CRUD operations with students.
        {field} overview: Registrar office wants to register students into the system so that they have them available for other operations
    }
    stu_mgmt +-- grading
    stu_mgmt +-- stu_c
	stu_mgmt +-- reg_track
    stu_mgmt +-- stu_plan_view
}

@enduml
