@startuml
title Kawsay Domain Model

!define NEW_ENTITY #LightGreen
!define UPDATED_ENTITY #LightBlue

' --- Core Scheduling Entities ---
entity CourseRequirementEntity {
  * **Id** (PK)
  --
  * Priority
  * SchedulingPreferences (jsonb)
  * StartDate (date)
  * EndDate (date)
  --
  * CourseId (FK)
  * TeacherId (FK, nullable)
  * StudentGroupId (FK)
  * TimetableId (FK)
}

entity ClassEntity {
  * **Id** (PK)
  --
  * ClassType
  * Frequency
  * Length
  * Capacity
  * StartDate (date)
  * EndDate (date)
  --
  * CourseId (FK)
  * TeacherId (FK, nullable)
  * TimetableId (FK)
  * StudentGroupId (FK, nullable)
  * SectionId (FK, nullable)
  * SourceRequirementId (FK, nullable)
}

entity ClassOccurrenceEntity {
  * **Id** (PK)
  --
  * Date
  --
  * ClassId (FK)
  * StartPeriodId (FK)
}

' --- Foundational & Academic Structure Entities ---
entity TimetableEntity {
  * **Id** (PK)
  --
  * Name
  * StartDate
  * EndDate
}

entity CourseEntity {
  * **Id** (PK)
  --
  * Name
  * Code
}

entity TeacherEntity {
  * **Id** (PK)
  --
  * Name
  * Type
}

entity StudentEntity {
  * **Id** (PK)
  --
  * Name
  * Standing
  --
  * SectionId (FK, nullable)
}

entity CohortEntity {
  * **Id** (PK)
  --
  * Name
  --
  * TimetableId (FK)
}

entity StudentGroupEntity {
  * **Id** (PK)
  --
  * Name
  --
  * CohortId (FK)
}

entity SectionEntity {
  * **Id** (PK)
  --
  * Name
  --
  * StudentGroupId (FK)
}

' --- Junction & Configuration Entities ---
entity EnrollmentEntity {
  * **Id** (PK)
  --
  * EnrollmentDate
  --
  * StudentId (FK)
  * ClassId (FK)
}

entity CoursePrerequisiteEntity {
  * **CourseId** (FK)
  * **PrerequisiteCourseId** (FK)
}

entity TeacherQualificationEntity {
  * **TeacherId** (FK)
  * **CourseId** (FK)
}


' --- Relationships ---

' The Core "Demand-Driven" Workflow
TimetableEntity "1" -- "0..*" CourseRequirementEntity : has
CourseEntity "1" -- "0..*" CourseRequirementEntity : is for
TeacherEntity "1" -- "0..*" CourseRequirementEntity : can be assigned to
StudentGroupEntity "1" -- "0..*" CourseRequirementEntity : is for
CourseRequirementEntity "1" -- "0..1" ClassEntity : results in

' Class Relationships
TimetableEntity "1" -- "0..*" ClassEntity : schedules
CourseEntity "1" -- "0..*" ClassEntity : is for
TeacherEntity "1" -- "0..*" ClassEntity : is taught by
ClassEntity "1" -- "0..*" ClassOccurrenceEntity : has occurrences

' Academic Structure Hierarchy
TimetableEntity "1" -- "0..*" CohortEntity : has
CohortEntity "1" -- "1..*" StudentGroupEntity : contains
StudentGroupEntity "1" -- "1..*" SectionEntity : contains
SectionEntity "1" -- "0..*" StudentEntity : contains

' Masterclass / Lab Relationships
StudentGroupEntity "1" -- "0..*" ClassEntity : is for (Masterclasses)
SectionEntity "1" -- "0..*" ClassEntity : is for (Labs)

' Enrollment (Many-to-Many)
StudentEntity "1" -- "0..*" EnrollmentEntity : has
ClassEntity "1" -- "0..*" EnrollmentEntity : has

' Prerequisite (Self-referencing Many-to-Many)
CourseEntity "1" -- "0..*" CoursePrerequisiteEntity : requires
CourseEntity "1" -- "0..*" CoursePrerequisiteEntity : is prerequisite for

' Qualification (Many-to-Many)
CourseEntity "1" -- "0..*" TeacherQualificationEntity : can be taught by
TeacherEntity "1" -- "0..*" TeacherQualificationEntity : is qualified for

@enduml
