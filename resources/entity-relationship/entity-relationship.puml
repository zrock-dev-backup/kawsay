@startuml
title Kawsay Timetable System - Logical Data Model
skinparam linetype ortho

' --- Core Academic Entities ---

entity Course {
  + **CourseCode** [PK]
  --
  * Name: varchar
  * DurationWeeks: int
}
note right: Represents a catalog course, like "CS101 - Intro to Programming".

entity Teacher {
  + **TeacherID** [PK]
  --
  * FullName: varchar
}

entity Timetable {
  + **TimetableID** [PK]
  --
  * Name: varchar
  * Module: varchar
  * Track: enum
  * StartDate: date
  * EndDate: date
}

' --- Class is the scheduled instance of a Course ---
entity Class {
  + **ClassID** [PK]
  --
  * ClassType: enum ('Master Class', 'Section')
  * DayOfWeek: enum
  * StartTime: time
  * EndTime: time
}
note top: A specific meeting, e.g., the Tuesday 10am Section for CS101.

' --- Student & Grouping Entities ---

entity Cohort {
  + **CohortID** [PK]
  --
  * Name: varchar
}
note left: A group of students starting at the same time, e.g., "Fall 2024".

entity Student {
  + **StudentID** [PK]
  --
  * FullName: varchar
  * Email: varchar
  * Status: enum ('Active', 'Withdrawn')
}

' --- Junction / Associative Entities for Many-to-Many Relationships ---

' A Student can have many Enrollments; A Class can have many Enrollments.
entity Enrollment {
  + **StudentID** [FK]
  + **ClassID** [FK]
  --
  * EnrollmentStatus: enum ('Enrolled', 'Clash-Overridden', 'Withdrawn')
}
note "This entity is the heart of the system, linking a student to a specific class instance and tracking their status within it." as N_Enroll

' A Course can require many other Courses as prerequisites.
entity CoursePrerequisite {
  + **CourseCode** [FK]
  + **PrerequisiteCourseCode** [FK]
}

' A Teacher can be qualified to teach many Courses.
entity TeacherQualification {
  + **TeacherID** [FK]
  + **CourseCode** [FK]
}


' --- Relationships ---

' Structural Relationships
Timetable "1" -- "0..*" Class : "schedules"
Course "1" -- "0..*" Class : "is an instance of"
Teacher "1" -- "0..*" Class : "teaches"
Cohort "1" -- "0..*" Student : "contains"

' Many-to-Many Relationships (resolved by junction entities)
Student "1" -- "0..*" Enrollment
Class "1" -- "0..*" Enrollment
Enrollment .. N_Enroll

' Self-referencing Many-to-Many for Prerequisites
Course "1" -- "0..*" CoursePrerequisite : "requires >"
Course "1" -- "0..*" CoursePrerequisite : "< is prerequisite for"

' Many-to-Many for Teacher Qualifications
Teacher "1" -- "0..*" TeacherQualification
Course "1" -- "0..*" TeacherQualification

@enduml
